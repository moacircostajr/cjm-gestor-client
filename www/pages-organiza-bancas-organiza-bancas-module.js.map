{"version":3,"sources":["webpack:///./src/app/model/BancasPadrao.ts","webpack:///./src/app/pages/organiza-bancas/organiza-bancas.module.ts","webpack:///./src/app/pages/organiza-bancas/organiza-bancas.page.html","webpack:///./src/app/pages/organiza-bancas/organiza-bancas.page.scss","webpack:///./src/app/pages/organiza-bancas/organiza-bancas.page.ts"],"names":[],"mappings":"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","file":"pages-organiza-bancas-organiza-bancas-module.js","sourcesContent":["import { Empresa } from './Empresa';\n\nexport class BancasPadrao {\n    public id:number;\n    public empresa:Empresa;\n    public bancas:string[];\n\n    constructor(empresa:Empresa) {\n        this.empresa = empresa;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrganizaBancasPage } from './organiza-bancas.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrganizaBancasPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrganizaBancasPage]\n})\nexport class OrganizaBancasPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"novaBanca()\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"salvarBancas()\\\">\\n        <ion-icon name=\\\"save\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Bancas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div *ngFor=\\\"let banca of bancas\\\">\\n    <ion-item>\\n      <ion-input value=\\\"{{banca}}\\\" #valor (ionBlur)=\\\"atualiza(banca, valor.value)\\\"></ion-input>\\n      <div>\\n        <ion-button item-end (click)=\\\"remove(banca)\\\">\\n          <ion-icon name=\\\"remove\\\"></ion-icon>\\n        </ion-button>\\n      </div>\\n    </ion-item>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29yZ2FuaXphLWJhbmNhcy9vcmdhbml6YS1iYW5jYXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { PadroesService } from 'src/app/services/padroes.service';\nimport { BancasPadrao } from 'src/app/model/BancasPadrao';\nimport { LoginService } from 'src/app/services/login.service';\n// import { QuestaoDaoService } from 'src/app/services/questao-dao.service';\n\n@Component({\n  selector: 'app-organiza-bancas',\n  templateUrl: './organiza-bancas.page.html',\n  styleUrls: ['./organiza-bancas.page.scss'],\n})\nexport class OrganizaBancasPage implements OnInit {\n  \n  bancas:string[] = [];\n  bancasPadrao:BancasPadrao = new BancasPadrao(this.loginService.empresa);\n\n  constructor(\n    private padroesService:PadroesService,\n    private loginService:LoginService\n    // private questaoDao:QuestaoDaoService\n    ) { }\n\n  ngOnInit() {\n    this.obterBancas();\n  }\n\n\n  atualiza(banca, novaBanca) {\n    let pos = this.bancas.indexOf(banca);\n    this.bancas[pos] = novaBanca;\n  }\n\n  remove(banca) {\n    let pos = this.bancas.indexOf(banca);\n    this.bancas.splice(pos, 1);\n  }\n\n  novaBanca() {\n    if (this.bancas == undefined) {\n      this.bancas = [];\n    }\n    this.bancas.push('NOVA_BANCA');\n  }\n\n  salvarBancas() {\n    this.bancasPadrao.bancas = this.bancas;\n    // this.questaoDao.salvaBancasPadrao(JSON.stringify(bancasPadrao.bancas));\n    this.padroesService.registrarBancas(this.bancasPadrao).subscribe(\n      (resultado) => {\n        resultado ? alert('Bancas registradas no servidor') : alert ('Falha no servidor');\n        /* TODO: quando houver falha, os dados registrados no banco local devem ser enviados p/ o servidor quando a internet estiver restabelecida */\n      },\n      (error) => { \n        console.log(error);\n      }\n    );\n  }\n\n  obterBancas() {\n    this.padroesService.obterBancas().subscribe(\n      (padroesR:BancasPadrao) => {\n        if (padroesR) {\n          this.bancas = padroesR.bancas;\n          this.bancasPadrao = padroesR;\n          // this.questaoDao.salvaBancasPadrao(JSON.stringify(padroesR));\n        } else {\n          this.bancas = []\n        };\n      }/* ,\n      () => {\n        this.questaoDao.obterBancasPadrao().then(\n          (bancasPadraoDao) => {\n            this.bancas = JSON.parse(bancasPadraoDao.rows.item(0).bancas);\n          },\n          (error) => {alert(PadroesService.centralDeTratamentoDeErros(error));}\n        ).catch(\n          (e) => {\n            console.log(e);\n            this.bancas = [];\n          }\n        );\n      } */\n    );\n  }\n}\n"],"sourceRoot":""}