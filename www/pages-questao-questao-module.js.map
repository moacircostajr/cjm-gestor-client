{"version":3,"sources":["webpack:///./src/app/model/Exercicio.ts","webpack:///./src/app/pages/questao/questao.module.ts","webpack:///./src/app/pages/questao/questao.page.html","webpack:///./src/app/pages/questao/questao.page.scss","webpack:///./src/app/pages/questao/questao.page.ts","webpack:///./src/app/services/questao-dao.service.ts"],"names":[],"mappings":"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","file":"pages-questao-questao-module.js","sourcesContent":["import {Comentario} from './Comentario';\nimport { Empresa } from './Empresa';\n\nexport class Exercicio {\n  public id: number;\n  public empresa:Empresa;\n  public enunciado1: string;\n  public imagemEnunciado: string;\n  public enunciado2: string;\n  public opcoes: string;\n  // public opcoes: string[];\n  public gabaritoObjetivo: number;\n  public gabaritoSubjetivo: string;\n  public pontuacao: number;\n  public materias: string;\n  // public materia: string[];\n  public bancas: string;\n  // public banca: string[];\n  public concursos: string;\n  // public prova: string[];\n  public anos: string;\n  // public ano: number[];\n  // public comentarios: Comentario[];\n  public metodoRequisicao: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuestaoPage } from './questao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [QuestaoPage]\n})\nexport class QuestaoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>    \\n    <ion-title>Questão</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form>\\n    <ion-card>\\n      <ion-card-content>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Enunciado</ion-label>\\n            <ion-textarea name=\\\"enunciado1\\\" [(ngModel)]=\\\"pEnunciado1\\\"></ion-textarea>\\n          </ion-item>\\n\\n          <ion-button class=\\\"botao\\\" color=\\\"primary\\\" (click)=\\\"fotografar()\\\">Imagem</ion-button>\\n\\n          <img [src]=\\\"pImagem\\\" *ngIf=\\\"pImagem\\\"/>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Complemento</ion-label>\\n            <ion-textarea  name=\\\"enunciado2\\\" [(ngModel)]=\\\"pEnunciado2\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item-group>\\n              <ion-item>\\n                  <ion-label stacked>Nº de assertivas</ion-label>\\n                <ion-select [(ngModel)]=\\\"pNAssertivas\\\" name=\\\"assertivas\\\">\\n                  <ion-select-option value=\\\"2\\\">2</ion-select-option>\\n                  <ion-select-option value=\\\"4\\\">4</ion-select-option>\\n                  <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item-group [hidden]=\\\"pNAssertivas==0\\\">\\n                  <ion-item *ngIf=\\\"pNAssertivas>1\\\">\\n                    <ion-label position=\\\"floating\\\">a) </ion-label>\\n                    <ion-input name=\\\"item0\\\" [(ngModel)]=\\\"pItem0\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"pNAssertivas>1\\\">\\n                    <ion-label position=\\\"floating\\\">b) </ion-label>\\n                    <ion-input name=\\\"item1\\\" [(ngModel)]=\\\"pItem1\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"pNAssertivas>2\\\">\\n                    <ion-label position=\\\"floating\\\">c) </ion-label>\\n                    <ion-input name=\\\"item2\\\" [(ngModel)]=\\\"pItem2\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"pNAssertivas>2\\\">\\n                    <ion-label position=\\\"floating\\\">d) </ion-label>\\n                    <ion-input name=\\\"item3\\\" [(ngModel)]=\\\"pItem3\\\"></ion-input>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"pNAssertivas>4\\\">\\n                    <ion-label position=\\\"floating\\\">e) </ion-label>\\n                    <ion-input name=\\\"item4\\\" [(ngModel)]=\\\"pItem4\\\"></ion-input>\\n                  </ion-item>\\n              </ion-item-group>\\n              <ion-item [hidden]=\\\"pNAssertivas==0\\\">\\n                  <ion-label stacked>Solução objetiva</ion-label>\\n                  <ion-select [(ngModel)]=\\\"pGabaritoObjetivo\\\" [ngModelOptions]=\\\"{standalone:true}\\\">\\n                      <ion-select-option value=\\\"0\\\" *ngIf=\\\"pNAssertivas>1\\\">A</ion-select-option>\\n                      <ion-select-option value=\\\"1\\\" *ngIf=\\\"pNAssertivas>1\\\">B</ion-select-option>\\n                      <ion-select-option value=\\\"2\\\" *ngIf=\\\"pNAssertivas>2\\\">C</ion-select-option>\\n                      <ion-select-option value=\\\"3\\\" *ngIf=\\\"pNAssertivas>2\\\">D</ion-select-option>\\n                      <ion-select-option value=\\\"4\\\" *ngIf=\\\"pNAssertivas>4\\\">E</ion-select-option>\\n                  </ion-select>\\n              </ion-item>\\n          </ion-item-group>\\n          <ion-item [hidden]=\\\"pNAssertivas>0\\\">\\n            <ion-label position=\\\"floating\\\">Solução dissertativa</ion-label>\\n            <ion-textarea name=\\\"gabaritoSubjetivo\\\" [(ngModel)]=\\\"pGabaritoSubjetivo\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label stacked>Pontuação</ion-label>\\n            <ion-input type=\\\"number\\\" name=\\\"pontuacao\\\" [(ngModel)]=\\\"pPontuacao\\\"></ion-input>\\n          </ion-item>\\n          <ion-list>\\n            <ion-radio-group>\\n              <ion-list-header>\\n                <ion-label>Matéria</ion-label>\\n              </ion-list-header>\\n              <ul>\\n                <ng-template #recursiveList let-taxonomia>\\n                  <li *ngFor=\\\"let elemento of taxonomia\\\">\\n                    <ion-item>\\n                      <ion-label>{{elemento.topico}}</ion-label>\\n                      <ion-radio slot=\\\"end\\\" #status (ionSelect)=\\\"definirCriterio(status.checked, elemento.topico)\\\"></ion-radio>\\n                    </ion-item>\\n                    <ul *ngIf=\\\"elemento.subtopico.length > 0\\\">\\n                      <ng-container *ngTemplateOutlet=\\\"recursiveList; context: { $implicit: elemento.subtopico }\\\"></ng-container>\\n                    </ul>\\n                  </li>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"recursiveList; context: { $implicit: taxonomia }\\\"></ng-container>\\n              </ul>\\n            </ion-radio-group>\\n          </ion-list>\\n          <ion-list>\\n            <ion-list-header>\\n              <ion-label>Bancas</ion-label>\\n            </ion-list-header>\\n            <div *ngFor=\\\"let banca of bancas\\\">\\n              <ion-item>\\n                <ion-label>{{banca}}</ion-label>\\n                <ion-toggle #status color=\\\"secondary\\\" (ionChange)=\\\"atualizaBancasQuestao(status.checked, banca)\\\"></ion-toggle>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n          <ion-list>\\n            <ion-list-header>\\n              <ion-label>Provas</ion-label>\\n            </ion-list-header>\\n            <div *ngFor=\\\"let prova of provas\\\">\\n              <ion-item>\\n                <ion-label>{{prova}}</ion-label>\\n                <ion-toggle #status color=\\\"secondary\\\" (ionChange)=\\\"atualizaProvasQuestao(status.checked, prova)\\\"></ion-toggle>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n          <ion-list>\\n              <ion-list-header>\\n                <ion-label>Ano</ion-label>\\n              </ion-list-header>\\n              <ion-item>\\n                <ion-input type=\\\"number\\\" #tAno value=\\\"2019\\\"></ion-input>\\n                <ion-button (click)=\\\"adicionaAnoQuestao(tAno.value)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n                </ion-button>\\n              </ion-item>\\n              <div *ngFor=\\\"let ano of pAno\\\">\\n                <ion-item>\\n                  <ion-label>{{ano}}</ion-label>\\n                  <ion-button item-end (click)=\\\"removeAnoQuestao(ano)\\\">\\n                    <ion-icon name=\\\"remove\\\"></ion-icon>\\n                  </ion-button>\\n                </ion-item>\\n              </div>\\n            </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </form>\\n\\n  <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" edge=\\\"true\\\">\\n    <ion-fab-button (click)=\\\"registrarQuestao()\\\">\\n      <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\"","module.exports = \"ul, li {\\n  list-style-type: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21vYWNpci93b3Jrc3BhY2UvY2ptL2NqbS1nZXN0b3ItY2xpZW50L3NyYy9hcHAvcGFnZXMvcXVlc3Rhby9xdWVzdGFvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcXVlc3Rhby9xdWVzdGFvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInVsLCBsaSB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { QuestaoDaoService } from 'src/app/services/questao-dao.service';\nimport { Exercicio } from 'src/app/model/Exercicio';\n// import { OrganizaQuestoesDaoService } from 'src/app/services/organiza-questoes-dao.service';\n// import { OrganizaBancasDaoService } from 'src/app/services/organiza-bancas-dao.service';\n// import { OrganizaConcursosDaoService } from 'src/app/services/organiza-concursos-dao.service';\nimport { QuestaoServiceService } from 'src/app/services/questao-service.service';\nimport { NavController } from '@ionic/angular';\nimport { PadroesService } from 'src/app/services/padroes.service';\nimport { ClassificacaoPadrao } from 'src/app/model/ClassificacaoPadrao';\nimport { ActivatedRoute } from '@angular/router';\nimport { BancasPadrao } from 'src/app/model/BancasPadrao';\nimport { ConcursosPadrao } from 'src/app/model/ConcursosPadrao';\nimport { LoginService } from 'src/app/services/login.service';\n// import { Base64 } from '@ionic-native/base64/ngx';\n\n@Component({\n  selector: 'app-questao',\n  templateUrl: './questao.page.html',\n  styleUrls: ['./questao.page.scss'],\n})\nexport class QuestaoPage implements OnInit {\n\n  pId: number;\n  pEnunciado1: string;\n  pImagem: string;\n  pEnunciado2: string;\n  pOpcoes:string[];\n  pNAssertivas = 0;\n  pItem0: string;\n  pItem1: string;\n  pItem2: string;\n  pItem3: string;\n  pItem4: string;\n  pGabaritoObjetivo: number;\n  pGabaritoSubjetivo: string;\n  pPontuacao: number;\n  taxonomia: any[];\n  bancas: string[];\n  provas: string[];\n  pAno: number[];\n  \n  pProva: string[];\n  pMateria: string[];\n  pBanca: string[];\n  exercicio: Exercicio;\n  final:boolean;\n  materia: string[];\n  iterador: number;\n\n  constructor(\n    private camera: Camera, \n    private questaoDao: QuestaoDaoService,\n    // private organizaQuestoesDaoService:OrganizaQuestoesDaoService,\n    // private organizaBancasDaoService:OrganizaBancasDaoService,\n    // private organizaProvasDaoService:OrganizaConcursosDaoService,\n    private questaoService:QuestaoServiceService,\n    private padroesService:PadroesService,\n    private navCtrl:NavController,\n    private activatedRoute:ActivatedRoute,\n    private loginService:LoginService\n    // private base64:Base64\n    ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(\n      (parametro) => {\n        if (parametro.id) {\n          this.questaoService.acessarExercicio(parametro.id).subscribe(\n            (dadosExercicio:Exercicio) => {\n              this.pId = dadosExercicio.id;\n              this.pEnunciado1 = dadosExercicio.enunciado1;\n              this.pImagem = dadosExercicio.imagemEnunciado;\n              this.pEnunciado2 = dadosExercicio.enunciado2;\n              this.pOpcoes = JSON.parse(dadosExercicio.opcoes);\n              if (dadosExercicio.opcoes) {\n                this.pNAssertivas = dadosExercicio.opcoes.length;\n                this.pOpcoes[0] ? this.pItem0 = this.pOpcoes[0] : this.pItem0 = null;\n                this.pOpcoes[1] ? this.pItem1 = this.pOpcoes[1] : this.pItem1 = null;\n                this.pOpcoes[2] ? this.pItem2 = this.pOpcoes[2] : this.pItem2 = null;\n                this.pOpcoes[3] ? this.pItem3 = this.pOpcoes[3] : this.pItem3 = null;\n                this.pOpcoes[4] ? this.pItem4 = this.pOpcoes[4] : this.pItem4 = null;\n                dadosExercicio.gabaritoObjetivo ? this.pGabaritoObjetivo = dadosExercicio.gabaritoObjetivo : this.pGabaritoObjetivo = null;\n              }\n              dadosExercicio.gabaritoSubjetivo ? this.pGabaritoSubjetivo = dadosExercicio.gabaritoSubjetivo : this.pGabaritoSubjetivo = null;\n              this.pPontuacao = dadosExercicio.pontuacao;\n              this.taxonomia = JSON.parse(dadosExercicio.materias);\n              this.bancas = JSON.parse(dadosExercicio.bancas);\n              this.provas = JSON.parse(dadosExercicio.concursos);\n              this.pAno =  JSON.parse(dadosExercicio.anos);\n            }\n          );\n        }\n      }\n    );\n    this.obterTaxonomia();\n    this.obterBancas();\n    this.obterProvas();\n  }\n\n  fotografar() {\n    this.camera.getPicture({\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      sourceType: this.camera.PictureSourceType.CAMERA,\n      allowEdit: true,\n      quality: 10,\n      correctOrientation: true\n    })\n    .then((foto) => {\n      this.pImagem = 'data:image/jpeg;base64,' + foto;\n      this.questaoDao.salvaFoto(this.pImagem);\n    },\n    (err) => {console.log(err);})\n    .catch(err => console.log(err));\n  }\n\n  get foto() {\n    let resultado;\n    this.questaoDao.recuperaFoto().subscribe(\n      (foto) => {\n        this.pImagem = foto;\n      },\n      (err) => {console.log(err);}\n      );\n    return this.pImagem;\n  }\n\n  registrarQuestao() {\n    if (!this.exercicio) {\n      this.exercicio = new Exercicio();\n    }\n    this.exercicio.empresa = this.loginService.gestor.data.empresa;\n    this.exercicio.enunciado1 =this.pEnunciado1;\n    this.exercicio.imagemEnunciado = JSON.stringify(this.pImagem);\n    this.exercicio.enunciado2 = this.pEnunciado2;\n    this.pOpcoes = new Array<string>();\n    if (this.pNAssertivas > 1) {\n      this.pOpcoes.push(this.pItem0);\n      this.pOpcoes.push(this.pItem1);\n      if (this.pNAssertivas > 2) {\n        this.pOpcoes.push(this.pItem2);\n        this.pOpcoes.push(this.pItem3);\n        if (this.pNAssertivas > 4) {\n          this.pOpcoes.push(this.pItem4);\n      }}\n      this.exercicio.opcoes = JSON.stringify(this.pOpcoes);\n      this.exercicio.gabaritoObjetivo = this.pGabaritoObjetivo;\n    } else {\n      this.exercicio.gabaritoSubjetivo = this.pGabaritoSubjetivo;\n    }\n    this.exercicio.pontuacao = this.pPontuacao;\n    this.exercicio.materias = JSON.stringify(this.pMateria);\n    this.exercicio.bancas = JSON.stringify(this.pBanca);\n    this.exercicio.concursos = JSON.stringify(this.pProva);\n    this.exercicio.anos = JSON.stringify(this.pAno);\n    if (this.pId == null) {\n      this.questaoService.enviaExercicio(this.exercicio).subscribe(\n        (retorno) => {\n          if (retorno) {\n            alert('Exercício salvo no Servidor');\n            this.navCtrl.navigateBack('questoes');\n          }/*  else {\n            this.exercicio.metodoRequisicao = 'POST';\n            this.questaoDao.salvaExercicio(this.exercicio)\n          } */\n        }/* ,\n        (error) => {\n          this.exercicio.metodoRequisicao = 'POST';\n          this.questaoDao.salvaExercicio(this.exercicio).subscribe(\n            () => {alert('Questão salva localmente');},\n            (err) => {console.log(err);}\n          );\n        } */\n      );\n/* \n    } else {\n      this.questaoService.atualizarExercicio(this.exercicio).subscribe(\n        (retorno) => {\n          if (retorno) {\n            alert('Exercício salvo no Servidor');\n            this.navCtrl.navigateBack('questoes');\n          } *//*  else {\n            this.exercicio.metodoRequisicao = 'PUT';\n            this.questaoDao.salvaExercicio(this.exercicio);\n          } */\n        /*} ,\n        (error) => {\n          this.exercicio.metodoRequisicao = 'PUT';\n          this.questaoDao.salvaExercicio(this.exercicio).subscribe(\n            () => {alert('Questão salva localmente');},\n            (err) => {console.log(err);}\n          ) ;\n        } \n      );*/\n    }\n    \n  }\n\n  /* registrarQuestao() {\n    if (!this.exercicio) {\n      this.exercicio = new Exercicio();\n    }\n    this.exercicio.enunciado1 =this.pEnunciado1;\n    this.exercicio.imagemEnunciado = this.pImagem;\n    this.exercicio.enunciado2 = this.pEnunciado2;\n    this.exercicio.opcoes = new Array<string>();\n    if (this.pNAssertivas >= 4) {\n      this.exercicio.opcoes.push(this.pItem0);\n      this.exercicio.opcoes.push(this.pItem1);\n      this.exercicio.opcoes.push(this.pItem2);\n      this.exercicio.opcoes.push(this.pItem3);\n      if (this.pNAssertivas === 5) {\n        this.exercicio.opcoes.push(this.pItem4);\n      }\n      this.exercicio.gabaritoObjetivo = this.pGabaritoObjetivo;\n    } else {\n      this.exercicio.gabaritoSubjetivo = this.pGabaritoSubjetivo;\n    }\n    this.exercicio.pontuacao = this.pPontuacao;\n    this.exercicio.materia = this.pMateria;\n    this.exercicio.banca = this.pBanca;\n    this.exercicio.prova = this.pProva;\n    this.exercicio.ano = this.pAno;\n    \n    this.questaoService.enviaExercicio(this.exercicio).subscribe(\n      (retorno) => {\n        if (retorno) {\n          alert('Exercício salvo no Servidor');\n          this.navCtrl.navigateBack('questoes');\n        } else {\n          alert('Erro no Servidor');\n        }\n      },\n      (error) => {\n        this.questaoDao.salvaQuestao(this.exercicio).subscribe(\n          () => {alert('Questão salva localmente');},\n          (err) => {console.log(err);}\n        );\n      }\n    );\n    \n  } */\n\n  obterTaxonomia() {\n    this.padroesService.obterClassificacao().subscribe(\n      (classificacao:ClassificacaoPadrao) => {\n        if (classificacao) {\n          // this.questaoDao.salvaClassificacaoPadrao(classificacao.classificacao);\n          this.taxonomia = JSON.parse(classificacao.classificacao);\n        }\n      }/* ,\n      (error) => {\n        console.log(error);\n        this.questaoDao.obterClassificacaoPadrao().then(\n          (classificacaoPadraoDao) => {\n            this.taxonomia = JSON.parse(classificacaoPadraoDao.rows.item(0).classificacao);\n          },\n          (error) => {alert(PadroesService.centralDeTratamentoDeErros(error));}\n        ).catch(\n          (e) => {\n            console.log(e);\n            this.taxonomia = [];\n          }\n        );\n      } */\n      );\n     /* this.organizaQuestoesDaoService.obter().subscribe(\n      (organizacao :any[]) => {this.taxonomia = organizacao;},\n      (error) => {console.log(error);}\n    ); */\n  }\n\n  definirCriterio(status, topico) {\n    this.pMateria = [];\n    this.final = false;\n    this.materia = [];\n    this.iterador = 0;\n    if (status == true) {\n      this.defineItensClassificacao(this.taxonomia, topico, 'taxonomia');\n      // console.log(this.pMateria);\n    }\n  }\n  \n  private defineItensClassificacao(array, valor, nomeArray) {\n    array.forEach((obj) => {\n      if (this.final == false) {\n        if (nomeArray == 'taxonomia'){\n          this.materia = [];\n        }\n        this.iterador = array.indexOf(obj);\n        if (obj.topico == valor) {\n          this.materia.push(obj.topico);\n          this.pMateria = this.materia;\n          this.final = true;\n          return;\n        } else if (obj.subtopico.length > 0) {\n          if (this.final == false){\n            this.materia.push(array[this.iterador].topico);\n          }\n          this.defineItensClassificacao(obj.subtopico, valor, obj.topico);\n        }\n      }\n    })\n  }\n\n  obterBancas() {\n    this.padroesService.obterBancas().subscribe(\n      (listaBancas:BancasPadrao) => {\n        if (listaBancas) {\n          // this.questaoDao.salvaBancasPadrao(JSON.stringify(listaBancas));\n          this.bancas = listaBancas.bancas;\n        }\n      }/* ,\n      () => {\n        this.questaoDao.obterBancasPadrao().then(\n          (bancasPadraoDao) => {\n            this.bancas = JSON.parse(bancasPadraoDao.rows.item(0).bancas);\n          },\n          (error) => {alert(PadroesService.centralDeTratamentoDeErros(error));}\n        ).catch(\n          (e) => {\n            console.log(e);\n            this.bancas = [];\n          }\n        );\n      } */\n    );\n  }\n\n  obterProvas() {\n    this.padroesService.obterConcursos().subscribe(\n      (listaConcursos:ConcursosPadrao) => {\n        if (listaConcursos) {\n          // this.questaoDao.salvaConcursosPadrao(JSON.stringify(listaConcursos));\n          this.provas = listaConcursos.concursos;\n        }\n      }/* ,\n      (error) => {\n        console.log(error);\n        this.questaoDao.obterConcursosPadrao().then(\n          (concursosPadraoDao) => {\n            this.provas = JSON.parse(concursosPadraoDao.rows.item(0).concursos);\n          },\n          (error) => {alert(PadroesService.centralDeTratamentoDeErros(error));}\n        ).catch(\n          (e) => {\n            console.log(e);\n            this.provas = [];\n          }\n        );\n      } */\n    );\n  }\n\n  atualizaBancasQuestao(status, banca) {\n    let pos = 0;\n    if(!this.pBanca) {\n      this.pBanca = [];\n    }\n    if (status) {\n      this.pBanca.push(banca);\n      pos = this.pBanca.indexOf(banca);\n    } else {\n      this.pBanca.splice(pos, 1);\n    }\n  }\n\n  atualizaProvasQuestao(status, provas) {\n    let pos = 0;\n    if(!this.pProva) {\n      this.pProva = [];\n    }\n    if (status) {\n      this.pProva.push(provas);\n      pos = this.pProva.indexOf(provas);\n    } else {\n      this.pProva.splice(pos, 1);\n    }\n  }\n\n  adicionaAnoQuestao(ano) {\n    if(!this.pAno) {\n      this.pAno = [];\n    }\n    this.pAno.push(ano);\n  }\n\n  removeAnoQuestao(ano) {\n    let pos = this.pAno.indexOf(ano);\n    this.pAno.splice(pos, 1);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Storage } from \"@ionic/storage\";\nimport { SQLite, SQLiteObject } from \"@ionic-native/sqlite/ngx\"\nimport { from as observableFrom } from 'rxjs';\nimport { Exercicio } from '../model/Exercicio';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestaoDaoService {\n\n  private opcoes:any = {\n    name: 'cjm_exercicios.db',\n    location: 'default'\n  };\n  db:SQLiteObject;\n  qtdeExercicios: number;\n\n  constructor(\n    private storage: Storage,\n    private sqlite: SQLite\n    ) {\n      this.sqlite.create(this.opcoes).then(\n        (sqliteObject:SQLiteObject) => {\n          this.db = sqliteObject;\n        },\n        (e) => {console.log(e);}\n      ).catch();\n      if (this.storage.get('sqlite') == null) {\n        this.criarBanco();\n      }\n      // this.limparTabelas();\n      // this.criarBanco();\n    }\n\n  salvaFoto(imagem) {\n    this.storage.set('imagem', imagem); /* o retorno do metodo set é uma promise, mas estamos trabalhando com observable. */\n  }\n\n  recuperaFoto() {\n    let promise = this.storage.get('imagem'); /* o retorno do metodo set é uma promise, mas estamos trabalhando com observable. */\n    return observableFrom(promise);\n  }\n/* \n  salvaQuestao(questao: Exercicio) {\n    let promise = this.storage.set('questao', questao);\n    return observableFrom(promise);\n  }\n\n  obterQuestoes() {\n    let promise = this.storage.get('questao');\n    return observableFrom(promise);\n  }\n */\n\n  obterExercicio(id:number) {\n    let query = 'SELECT id_serv, enunciado1, imagemEnunciado, enunciado2, opcoes, gabaritoObjetivo, gabaritoSubjetivo, pontuacao, materias, bancas, concursos, anos, metodoRequisicao FROM exercicios WHERE id = ?';\n    return this.db.executeSql(query, [id]);\n  }\n\n  salvaExercicio(questao: Exercicio) {\n    let id:number;\n    this.obterNumeroExercicios();\n    this.qtdeExercicios ? id = this.qtdeExercicios + 1 : id = 1;\n    console.log('Salvando exercício.');\n    let query = 'insert into exercicios (id, id_serv, enunciado1, imagemEnunciado, enunciado2, opcoes, gabaritoObjetivo, gabaritoSubjetivo, pontuacao, materias, bancas, concursos, anos, metodoRequisicao) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)';\n    this.db.executeSql(query, [id, questao.id, questao.enunciado1, questao.imagemEnunciado, questao.enunciado2, questao.opcoes, questao.gabaritoObjetivo, questao.gabaritoSubjetivo, questao.pontuacao, questao.materias, questao.bancas, questao.concursos, questao.anos, questao.metodoRequisicao]);\n  }\n\n  private obterNumeroExercicios() {\n    let query = 'SELECT * FROM exercicios';\n    this.db.executeSql(query, []).then(\n      (resultado) => {\n          this.qtdeExercicios = resultado.res.rows.length;\n      }\n    ).catch(e => console.log(e));\n  }\n  \n\n  salvaClassificacaoPadrao(classificacao: string) {\n    let query;\n    query = \"UPDATE classificacao_padrao SET classificacao = '\" + classificacao + \"' WHERE id = 1\";\n    this.db.executeSql(query, []);\n  }\n\n  obterClassificacaoPadrao() {\n    let query = 'SELECT * FROM classificacao_padrao WHERE id = ?';\n    return this.db.executeSql(query, [1]);\n  }\n\n  salvaConcursosPadrao(concursos: string) {\n    let query;\n    query = \"UPDATE concursos_padrao SET concursos = '\" + concursos + \"' WHERE id = 1\";\n    this.db.executeSql(query, []);\n  }\n\n  obterConcursosPadrao() {\n    let query = 'SELECT * FROM concursos_padrao WHERE id = ?';\n    return this.db.executeSql(query, [1]);\n  }\n\n  salvaBancasPadrao(bancas: string) {\n    let query;\n    query = \"UPDATE bancas_padrao SET bancas = '\" + bancas + \"' WHERE id = 1\";\n    this.db.executeSql(query, []);\n  }\n\n  obterBancasPadrao() {\n    let query = 'SELECT * FROM bancas_padrao WHERE id = ?';\n    return this.db.executeSql(query, [1]);\n  }\n\n  /*\n  obterExercicios() {\n    console.log('Obtendo lista de exercícios salvos no SQLite');\n    let listaExercicios:Exercicio[];\n    let query = 'select * from exercicios';\n    this.sqlite.create(this.opcoes).then(\n      (sqLiteObject:SQLiteObject) => {\n        sqLiteObject.executeSql(query, []).then(\n          (resultado) => {\n            console.log('SQL Executado: ' + query );\n            if (resultado.res.rows.length > 0) {\n              resultado.res.rows.forEach(element => {\n                listaExercicios.push(element);\n              });\n            }\n          }\n          ).catch(e => console.log(e));\n      }\n    ).catch(e => console.log(e)); \n    return listaExercicios;\n  }\n*/\n\n  criarBanco() {\n    let queryCriaTblExercicios = 'CREATE TABLE IF NOT EXISTS exercicios (id NUMBER PRIMARY KEY, id_serv NUMBER, enunciado1 TEXT, imagemEnunciado BLOB, enunciado2 TEXT, opcoes TEXT, gabaritoObjetivo NUMBER, gabaritoSubjetivo TEXT, pontuacao NUMBER, materias TEXT, bancas TEXT, concursos TEXT, anos TEXT, metodoRequisicao VARCHAR(7))';\n    let queryCriaTblClassificacaoPadrao = 'CREATE TABLE IF NOT EXISTS classificacao_padrao (id NUMBER, classificacao TEXT)';\n    let queryNovaClassificacaoPadrao = \"INSERT INTO classificacao_padrao (id, classificacao) VALUES (1, 'classificacao_padrao')\";\n    let queryCriaTblBancasPadrao = 'CREATE TABLE IF NOT EXISTS bancas_padrao (id NUMBER, bancas TEXT)';\n    let queryNovasBancasPadrao = \"INSERT INTO bancas_padrao (id, bancas) VALUES (1, 'bancas_padrao')\";\n    let queryCriaTblConcursosPadrao = 'CREATE TABLE IF NOT EXISTS concursos_padrao (id NUMBER, concursos TEXT)';\n    let queryNovosConcursosPadrao = \"INSERT INTO concursos_padrao (id, concursos) VALUES (1, 'concursos_padrao')\";\n\n    this.db.executeSql(queryCriaTblClassificacaoPadrao, []);\n    this.db.executeSql(queryNovaClassificacaoPadrao, []);\n    this.db.executeSql(queryCriaTblBancasPadrao, []);\n    this.db.executeSql(queryNovasBancasPadrao, []);\n    this.db.executeSql(queryCriaTblConcursosPadrao, []);\n    this.db.executeSql(queryNovosConcursosPadrao, []);\n    this.db.executeSql(queryCriaTblExercicios, []);\n\n    this.storage.set('sqlite', '1');\n  }\n\n  limparTabelas() {\n    let query = 'DELETE FROM classificacao_padrao';\n    this.db.executeSql(query, []);\n    let query1 = 'DELETE FROM concursos_padrao';\n    this.db.executeSql(query1, []);\n    let query2 = 'DELETE FROM bancas_padrao';\n    this.db.executeSql(query2, []);\n  }\n\n/* \n  private executarConsultaSQLite(query:string) {\n    this.sqlite.create(this.opcoes).then(\n      (sqLiteObject:SQLiteObject) => {\n        sqLiteObject.executeSql(query, []).then(\n          (resultado) => {\n            this.resultadoConsultaSQLite = resultado.rows.item(0).bancas;\n            for (let i = 0; i < resultado.rows.length; i++) {\n              this.resultadoConsultaSQLite = resultado.rows.item(i);\n            }\n          }\n          ).catch(e => console.log(e));\n      }\n    ).catch(e => console.log(e));\n  } */\n\n}\n"],"sourceRoot":""}