{"version":3,"sources":["webpack:///./src/app/model/ClassificacaoPadrao.ts","webpack:///./src/app/pages/organiza-questoes/organiza-questoes.module.ts","webpack:///./src/app/pages/organiza-questoes/organiza-questoes.page.html","webpack:///./src/app/pages/organiza-questoes/organiza-questoes.page.scss","webpack:///./src/app/pages/organiza-questoes/organiza-questoes.page.ts"],"names":[],"mappings":"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","file":"pages-organiza-questoes-organiza-questoes-module.js","sourcesContent":["import { Empresa } from './Empresa';\nimport { LoginService } from '../services/login.service';\n\nexport class ClassificacaoPadrao {\n    public id:number;\n    public empresa:Empresa;\n    public classificacao:string;\n\n    constructor (empresa:Empresa) {\n        this.empresa = empresa;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrganizaQuestoesPage } from './organiza-questoes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrganizaQuestoesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrganizaQuestoesPage]\n})\nexport class OrganizaQuestoesPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"novoTopicoGeral()\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"salvarTaxonomia()\\\">\\n        <ion-icon name=\\\"save\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>   \\n    <ion-title>Mat√©ria</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ng-template #recursiveList let-taxonomia>\\n      <li *ngFor=\\\"let elemento of taxonomia\\\">\\n        <ion-item>\\n          <ion-input value=\\\"{{elemento.topico}}\\\" #valor (ionBlur)=\\\"atualiza(elemento.topico, valor.value)\\\"></ion-input>\\n          <div>\\n            <ion-button item-end (click)=\\\"remove(elemento.topico)\\\">\\n              <ion-icon name=\\\"remove\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button item-end (click)=\\\"novoSubitem(elemento.topico)\\\">\\n              <ion-icon name=\\\"return-right\\\"></ion-icon>\\n            </ion-button>\\n          </div>\\n        </ion-item>\\n        <ul *ngIf=\\\"elemento.subtopico.length > 0\\\">\\n          <ng-container *ngTemplateOutlet=\\\"recursiveList; context: { $implicit: elemento.subtopico }\\\"></ng-container>\\n        </ul>\\n      </li>\\n    </ng-template>\\n    <ng-container *ngTemplateOutlet=\\\"recursiveList; context: { $implicit: taxonomia }\\\"></ng-container>\\n</ion-content>\\n\"","module.exports = \"ul, li {\\n  list-style-type: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21vYWNpci93b3Jrc3BhY2UvY2ptL2NqbS1nZXN0b3ItY2xpZW50L3NyYy9hcHAvcGFnZXMvb3JnYW5pemEtcXVlc3RvZXMvb3JnYW5pemEtcXVlc3RvZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9vcmdhbml6YS1xdWVzdG9lcy9vcmdhbml6YS1xdWVzdG9lcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCwgbGkge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { OrganizaQuestoesDaoService } from 'src/app/services/organiza-questoes-dao.service';\nimport { PadroesService } from 'src/app/services/padroes.service';\nimport { ClassificacaoPadrao } from 'src/app/model/ClassificacaoPadrao';\n// import { QuestaoDaoService } from 'src/app/services/questao-dao.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Empresa } from 'src/app/model/Empresa';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-organiza-questoes',\n  templateUrl: './organiza-questoes.page.html',\n  styleUrls: ['./organiza-questoes.page.scss'],\n})\nexport class OrganizaQuestoesPage implements OnInit {\n\n  classificacaoPadrao: ClassificacaoPadrao = new ClassificacaoPadrao(this.loginService.empresa);\n  taxonomia: any[] = [];\n\n  constructor(\n    // private organizaQuestoesDaoService: OrganizaQuestoesDaoService,\n    private padroesService: PadroesService,\n    private loginService: LoginService\n    // private questaoDao:QuestaoDaoService\n    ) { }\n\n  ngOnInit() {\n    this.obterTaxonomia();\n  }\n  /* public taxonomia =\n  [\n    {\n      topico: 'gramatica',\n      subtopico: [\n        {\n          topico: 'morfologia',\n          subtopico: []\n        }, {\n          topico: 'sintaxe',\n          subtopico: [{topico: 'frase', subtopico:[]},{topico: 'oracao', subtopico: []}, {topico: 'periodo', subtopico: []}]\n        }\n      ]\n    }, {\n      topico: 'semantica',\n      subtopico: []\n    }, {\n      topico: 'estilistica',\n      subtopico: []\n    }\n  ]; */\n\n  atualiza(pTopico, pValor) {\n    this.buscaEAtualiza(this.taxonomia, pTopico, pValor);\n  }\n\n  private buscaEAtualiza(array, valor, novoValor) {\n    let indice;\n    array.forEach((obj) => {\n      if (obj.topico === valor) {\n        indice = array.indexOf(obj);\n        array[indice].topico = novoValor;\n      } else if (obj.subtopico.length > 0) {\n        this.buscaEAtualiza(obj.subtopico, valor, novoValor);\n      }\n    });\n  }\n\n  remove(valor) {\n    this.buscaERemove(this.taxonomia, valor);\n  }\n\n  private buscaERemove(array, valor) {\n    let indice;\n    array.forEach((obj) => {\n      if (obj.topico === valor) {\n        indice = array.indexOf(obj);\n        array.splice(indice, 1);\n      } else if (obj.subtopico.length > 0) {\n        this.buscaERemove(obj.subtopico, valor);\n      }\n    });\n  }\n\n  novoSubitem(valor) {\n    this.buscaEIncluiSubitem(this.taxonomia, valor);\n  }\n\n  private buscaEIncluiSubitem(array, valor) {\n    let indice;\n    array.forEach((obj) => {\n      if (obj.topico === valor) {\n        indice = array.indexOf(obj);\n        array[indice].subtopico.push({topico: 'NOVO_SUBTOPICO', subtopico: []});\n      } else if (obj.subtopico.length > 0) {\n        this.buscaEIncluiSubitem(obj.subtopico, valor);\n      }\n    });\n  }\n\n  novoTopicoGeral() {\n    this.taxonomia.push({topico: 'NOVO_TOPICO', subtopico: []});\n  }\n\n  obterTaxonomia() {\n    this.padroesService.obterClassificacao().subscribe(\n      (padroesR: ClassificacaoPadrao) => {\n        if (padroesR) {\n          this.taxonomia = JSON.parse(padroesR.classificacao);\n          this.classificacaoPadrao = padroesR;\n          // this.questaoDao.salvaClassificacaoPadrao(JSON.stringify(padroesR.classificacao));\n        }\n      }/* ,\n        (error) => {\n          console.log(error);\n          this.questaoDao.obterClassificacaoPadrao().then(\n            (classificacaoPadraoDao) => {\n              this.taxonomia = JSON.parse(classificacaoPadraoDao.rows.item(0).classificacao);\n            },\n            (error) => {alert(PadroesService.centralDeTratamentoDeErros(error));}\n          ).catch(\n            (e) => {\n              console.log(e);\n              this.taxonomia = [];\n            }\n          );\n        } */\n    );\n    /* this.organizaQuestoesDaoService.obter().subscribe(\n      (organizacao :any[]) => {\n        this.taxonomia = organizacao;\n      },\n      (error) => { console.log(error); }\n    ); */\n  }\n\n  /* recuperarObjetos(dados) {\n    console.log(dados);\n  } */\n\n  salvarTaxonomia() {\n    this.classificacaoPadrao.classificacao = JSON.stringify(this.taxonomia);\n    // this.classificacaoPadrao.empresa = this.loginService.gestor.data.empresa;\n    // this.questaoDao.salvaClassificacaoPadrao(JSON.stringify(this.taxonomia));\n    this.padroesService.registrarClassificacao(this.classificacaoPadrao).subscribe(\n      (resultado) => {\n        if (resultado) {\n          alert('Classifica√ß√£o registrada no servidor');\n        } else {\n          alert('Falha no servidor');\n        }\n      },\n      (error) => {\n        console.log(error);\n        // alert(this.padroesService.centralDeTratamentoDeErros(error));\n      }\n    );\n    // this.organizaQuestoesDaoService.salvar(this.taxonomia);\n  }\n}\n"],"sourceRoot":""}